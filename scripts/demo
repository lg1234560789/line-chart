#!/usr/bin/env node

const _ = require('lodash');
const exec = require('child_process').exec;
const fs = require('fs');
const glob = require('glob');
const hjson = require('hjson');
const path = require('path');
const Q = require('q');
const serve = require('./serve');
const writeFile = require('./writeFile');

const generateHTML = () => {
  const template = _.template(String(fs.readFileSync('e2e/templates/angularjs/single.html')));

  glob('e2e/test_cases/*.hjson', (er, files) => {
    files.forEach(file => {
      const name = path.basename(file, path.extname(file));
      var data = hjson.parse(fs.readFileSync(file, 'utf8'));

      writeFile('.tmp/test/e2e/' + name + '.html', template({data, name}));
    });
  });
};

const runTests = () => {
  const deferred = Q.defer();

  glob('.tmp/test/e2e/*.e2e.js', (er, files) => {
    let child = exec('protractor --specs ' + files.join(',') + ' config/protractor.conf.js');

    child.stdout.pipe(process.stdout);
    child.stderr.pipe(process.stderr);
    child.on('exit', deferred.resolve);
  });


  return deferred.promise;
};


generateHTML();
serve();
runTests().then(process.exit);
